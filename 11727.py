n = int(input())

dp = [0] * (max(n + 1, 3))  # n이 1이나 2일 때를 대비해 최소 크기 3 보장

dp[1] = 1
dp[2] = 3

if n >= 3:
    for i in range(3, n + 1):
        # dp[i] = max(dp[i - 1] + 1, dp[i - 2] + 3) % 10007
        
        # dp[i] 에서 채우는 방법
        # 1) i - 1 까지 채운 상태에서, 세로 블럭 1개를 추가한다. 경우의 수: 1 * dp[i - 1]
        # 2) i - 2 까지 채운 상태에서, 가로 블록 2개를 붙인 걸 추가한다. 경우의 수: 1 * dp[i - 2]
        # 3) i - 3 까지 채운 상태에서, 세로 블록 2개를 붙인 걸 추가한다. 경우의 수: 1 * dp[i - 2]
        
        dp[i] = (dp[i - 1] + dp[i - 2] + dp[i - 2]) % 10007

print(dp[n])